{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"iLA6BeA,EA3BK,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAEDC,mBAAS,IAFR,mBAE9BC,EAF8B,KAElBC,EAFkB,KAkBrC,OACI,0BAAMC,SAXW,SAACC,GAElBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAc,SAAAS,GAAI,OAAGP,GAAH,mBAAkBO,OACpCN,EAAc,OAOd,2BAAOO,KAAK,OAAOC,MAAOT,EAAYU,SAhBpB,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,Y,uBCPlBG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DAEbC,EAFa,iDAEmCC,UAAUH,GAF7C,+DAGAI,MAAMF,GAHN,cAGbG,EAHa,gBAIEA,EAAKC,OAJP,uBAIZC,EAJY,EAIZA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAClB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAKQ,EAAIG,OAAOC,iBAAiBZ,QAVtB,kBAeZM,GAfY,4CAAH,sDCCPO,EAAc,SAAC,GAAmB,EAAlBJ,GAAmB,IAAhBC,EAAe,EAAfA,MAAMV,EAAS,EAATA,IAGlC,OACI,yBAAKc,UAAU,8CACX,yBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,2BAAIA,KCuBDO,EAxBC,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAAc,ECFJ,SAACA,GAAc,IAAD,EACZd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAHyB,mBAC/BC,EAD+B,KACxBC,EADwB,KAgBtC,OAVAC,qBAAU,WACNxB,EAAQC,GACHwB,MAAM,SAAAC,GACHH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAGvB,CAACpB,IAEIqB,EDZgBK,CAAa1B,GAA7BO,EAFqB,EAErBA,KAAKa,EAFgB,EAEhBA,QAKZ,OACI,oCACI,4BAAKpB,GACJoB,GAAW,wBAAIJ,UAAU,qCAAd,eACZ,yBAAKA,UAAU,aAGPT,EAAKE,KAAI,SAAAC,GAAG,OACR,kBAAC,EAAD,eAAaiB,IAAKjB,EAAIC,IAASD,UEKxCkB,EAtBM,WAAK,MAEc1C,mBAAS,CAAC,gBAFxB,mBAEf2C,EAFe,KAEH5C,EAFG,KAMtB,OACI,oCACI,4CACA,kBAAC,EAAD,CAAaA,cAAeA,IAC5B,6BAEA,4BAEQ4C,EAAWpB,KAAK,SAAAT,GAAQ,OACpB,kBAAC,EAAD,CAAS2B,IAAK3B,EAAUA,SAAYA,UCd5D8B,IAASC,OACL,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.ac3aa536.chunk.js","sourcesContent":["import React, {useState} from 'react';\nimport PropTypes from 'prop-types';\nconst AddCategory = ({setCategories}) => {\n    \n    const [inputValue, setInputValue] = useState('');\n\n    const handleInputChange = (e) => {\n        setInputValue(e.target.value);\n    }\n\n    const handleSubmit = (e) => {\n        //Previene el comportamiento por defecto del formulario...\n        e.preventDefault();\n        if (inputValue.trim().length > 2) {\n            setCategories(cats=>[inputValue, ...cats]);\n            setInputValue('');\n            \n        }\n    }\n\n    return(\n        <form onSubmit={handleSubmit}>\n            <input type=\"text\" value={inputValue} onChange={handleInputChange}/>\n        </form>\n    );\n}\nAddCategory.propTypes = {\n    setCategories: PropTypes.func.isRequired\n}\nexport default AddCategory;","export const getGifs = async(category)=>{\n    //encodeURI() reemplaza los espaciados por %20 y mas\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=d94ljYrePx90uQdzSgvVpKkbmPYT0olj`;\n    const resp = await fetch(url);\n    const {data} = await resp.json();\n\n    const gifs = data.map(img => {\n        return {\n            id: img.id,\n            title: img.title,\n            url: img.images.downsized_medium.url\n        }\n    })\n    //console.log(gifs);\n    //setImages(gifs);\n    return gifs;\n}","import React from 'react'\nexport const GifGridItem = ({id,title,url}) => {\n//export const GifGridItem = (props) => {\n    //console.log(props.img.title);\n    return (\n        <div className=\"card animate__animated animate__backInLeft\">\n            <img src={url} alt={title}/>\n            <p>{title}</p>\n        </div>\n    )\n}\n","//import React, {useState, useEffect} from 'react'\nimport React from 'react'\nimport { useFetchGifs } from '../hooks/useFetchGifs';\nimport { GifGridItem } from './GifGridItem';\n// import { getGifs } from '../helpers/getGifs';\n\nconst GifGrid = ({category}) => {\n    // const [images,setImages]= useState([]);\n    const {data,loading} = useFetchGifs(category);\n    // useEffect(() => {\n    //     getGifs(category).then(imgs => setImages(imgs));\n    // }, [])\n\n    return (\n        <>\n            <h3>{category}</h3>\n            {loading && <h3 className=\"animate__animated animate__fadeIn\">Cargando...</h3>}\n            <div className=\"card-grid\">\n                \n                {\n                    data.map(img=>(\n                        <GifGridItem key={img.id} { ...img} />\n                        //<GifGridItem key={img.id} img={img} />\n                    ))\n                }\n                \n            </div>\n        </>\n    )\n}\nexport default GifGrid;\n","import {useState, useEffect} from 'react';\nimport { getGifs } from '../helpers/getGifs';\n\n//Estos son CustomHooks y funcionan como los functional Components\nexport const useFetchGifs = (category) => {\n    const [state, setState] = useState({\n        data: [],\n        loading: true\n    });\n    //Los useEffects no pueden ser async\n    useEffect(()=>{\n        getGifs(category)\n            .then( imgs => {\n                setState({\n                    data: imgs,\n                    loading: false\n                })\n            });\n    },[category])\n    \n    return state;\n}\n","import React, {useState} from 'react';\nimport AddCategory from './components/AddCategory';\nimport GifGrid from './components/GifGrid';\n\nconst GifExpertApp = () =>{\n    //api: d94ljYrePx90uQdzSgvVpKkbmPYT0olj\n    const [categories, setCategories] = useState([\"Dragon Ball\"]);\n    // const handleAdd=()=>{\n    //     setCategories(cats=>[...cats,\"HunterXHunter\"]);\n    // }\n    return (\n        <>\n            <h2>GifExpertApp</h2>\n            <AddCategory setCategories={setCategories} />            \n            <hr />\n\n            <ol>\n                {\n                    categories.map( category => (\n                        <GifGrid key={category} category = {category} />\n                    ))\n                }\n            </ol>\n        </>\n    );\n}\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GifExpertApp from './GifExpertApp';\n\nReactDOM.render(  \n    <GifExpertApp />,  \n    document.getElementById('root')\n);"],"sourceRoot":""}